<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~ WSO2 Inc. licenses this file to you under the Apache License,
~ Version 2.0 (the "License"); you may not use this file except
~ in compliance with the License.
~ You may obtain a copy of the License at
~    http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing,
~ software distributed under the License is distributed on an
~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~ KIND, either express or implied.  See the License for the
~ specific language governing permissions and limitations
~ under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="createEvent">
    <parameter name="name" description="Name of the event"/>
    <parameter name="descriptionHtml" description="Description of event"/>
    <parameter name="organizerId " description="ID of the organizer this event"/>
    <parameter name="startUtc" description="Start time of the event"/>
    <parameter name="startTimezone" description="Start time timezone"/>
    <parameter name="endUtc" description="End time of the event"/>
    <parameter name="endTimezone" description="End time timezone"/>
    <parameter name="currency" description="Event Currency"/>
    <parameter name="venueId" description="Id of the venue"/>
    <parameter name="onlineEvent" description="Is the event online-only"/>
    <parameter name="listed" description="If the event is publicly listed and searchable"/>
    <parameter name="logoId" description="The logo for the event"/>
    <parameter name="categoryId" description="The category for the event"/>
    <parameter name="subcategoryId" description="The subcategory for the event"/>
    <parameter name="formatId" description="The format for the event"/>
    <parameter name="shareable " description="If an event is shareable via social media"/>
    <parameter name="inviteOnly" description="Only invited users can see the event page"/>
    <parameter name="password" description="Password needed to see the event in unlisted mode"/>
    <parameter name="capacity" description="Set specific capacity"/>
    <parameter name="showRemaining" description="If the remaining number of tickets is publicly visible on the event page"/>
    <sequence>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.descriptionHtml" expression="$func:descriptionHtml"/>
        <property name="uri.var.organizerId" expression="$func:organizerId"/>
        <property name="uri.var.startUtc" expression="$func:startUtc"/>
        <property name="uri.var.startTimezone" expression="$func:startTimezone"/>
        <property name="uri.var.endUtc" expression="$func:endUtc"/>
        <property name="uri.var.endTimezone" expression="$func:endTimezone"/>
        <property name="uri.var.currency" expression="$func:currency"/>
        <property name="uri.var.venueId" expression="$func:venueId"/>
        <property name="uri.var.listed" expression="$func:listed"/>
        <property name="uri.var.logoId" expression="$func:logoId"/>
        <property name="uri.var.categoryId" expression="$func:categoryId"/>
        <property name="uri.var.subcategoryId" expression="$func:subcategoryId"/>
        <property name="uri.var.formatId" expression="$func:formatId"/>
        <property name="uri.var.shareable " expression="$func:shareable "/>
        <property name="uri.var.inviteOnly" expression="$func:inviteOnly"/>
        <property name="uri.var.password" expression="$func:password"/>
        <property name="uri.var.capacity" expression="$func:capacity"/>
        <property name="uri.var.showRemaining" expression="$func:showRemaining"/>
        <property name="uri.var.onlineEvent" expression="$func:onlineEvent"/>
        <payloadFactory media-type="json">
            <format>{
                "event.name.html":"$1",
                "event.description.html":"$2",
                "event.organizer_id": "$3",
                "event.start.utc": "$4",
                "event.start.timezone": "$5",
                "event.end.utc": "$6",
                "event.end.timezone": "$7",
                "event.currency": "$8",
                "event.venue_id": "$9",
                "event.listed": "$10",
                "event.logo.id": "$11",
                "event.category_id": "$12",
                "event.subcategory_id": "$13",
                "event.format_id": "$14",
                "event.shareable": "$15",
                "event.invite_only": "$16",
                "event.password": "$17",
                "event.capacity": "$18",
                "event.show_remaining": "$19",
                "event.online_event":"$20"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.name')" />
                <arg expression="get-property('uri.var.descriptionHtml')" />
                <arg expression="get-property('uri.var.organizerId')" />
                <arg expression="get-property('uri.var.startUtc')" />
                <arg expression="get-property('uri.var.startTimezone')" />
                <arg expression="get-property('uri.var.endUtc')" />
                <arg expression="get-property('uri.var.endTimezone')" />
                <arg expression="get-property('uri.var.currency')" />
                <arg expression="get-property('uri.var.venueId')" />
                <arg expression="get-property('uri.var.listed')" />
                <arg expression="get-property('uri.var.logoId')" />
                <arg expression="get-property('uri.var.categoryId')" />
                <arg expression="get-property('uri.var.subcategoryId')" />
                <arg expression="get-property('uri.var.formatId')" />
                <arg expression="get-property('uri.var.shareable ')" />
                <arg expression="get-property('uri.var.inviteOnly')" />
                <arg expression="get-property('uri.var.password')" />
                <arg expression="get-property('uri.var.capacity')" />
                <arg expression="get-property('uri.var.showRemaining')" />
                <arg expression="get-property('uri.var.onlineEvent')" />
            </args>
        </payloadFactory>
        <filter
                xpath="get-property('uri.var.listed') = '' or (not(string(get-property('uri.var.listed'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
                    delete payload["event.listed"];
                    mc.setPayloadJSON(payload);
                ]]>
                </script>
            </then>
            <else>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
                    delete payload["event.password"];
                    mc.setPayloadJSON(payload);
                ]]>
                </script>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.logoId') = '' or (not(string(get-property('uri.var.logoId'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.logo.id"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.categoryId') = '' or (not(string(get-property('uri.var.categoryId'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.category.id"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.subcategoryId') = '' or (not(string(get-property('uri.var.subcategoryId'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.subcategory_id"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.formatId') = '' or (not(string(get-property('uri.var.formatId'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.format_id"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.shareable') = '' or (not(string(get-property('uri.var.shareable'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.shareable"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.inviteOnly') = '' or (not(string(get-property('uri.var.inviteOnly'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.invite_only"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.password') = '' or (not(string(get-property('uri.var.password'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.password"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.capacity') = '' or (not(string(get-property('uri.var.capacity'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
				    delete payload["event.capacity"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.showRemaining') = '' or (not(string(get-property('uri.var.showRemaining'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.show_remaining"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.onlineEvent') = '' or (not(string(get-property('uri.var.onlineEvent'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
					delete payload["event.online_event"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
            <else>
                <script language="js"><![CDATA[
				    var payload = mc.getPayloadJSON();
					delete payload["event.venue_id"];
					mc.setPayloadJSON(payload);
					]]>
                </script>
            </else>
        </filter>
        <property name="messageType" value="application/json" scope="axis2"/>
        <property name="DISABLE_CHUNKING" value="true" scope="axis2"/>
        <header name="Content-Type" value="application/json" scope="transport"/>
        <call>
            <endpoint>
                <http method="POST"
                      uri-template="{uri.var.eventbrite.apiUrl}/events/?token={uri.var.eventbrite.accessToken}"/>
                <property name="Accept" value="*/*" scope="transport"/>
            </endpoint>
        </call>
    </sequence>
</template>













